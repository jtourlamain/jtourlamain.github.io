<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://www.devprotocol.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.devprotocol.com/" rel="alternate" type="text/html" /><updated>2021-07-24T14:12:15-05:00</updated><id>https://www.devprotocol.com/feed.xml</id><title type="html">DevProtocol</title><subtitle>A blog about dotnet, Azure cloud integrations and identity.</subtitle><author><name>Jan Tourlamain</name></author><entry><title type="html">Expose openapi documentation on Azure API Management</title><link href="https://www.devprotocol.com/2021/07/20/expose-openapi-documentation-on-azure-api-management.html" rel="alternate" type="text/html" title="Expose openapi documentation on Azure API Management" /><published>2021-07-20T00:00:00-05:00</published><updated>2021-07-20T00:00:00-05:00</updated><id>https://www.devprotocol.com/2021/07/20/expose-openapi-documentation-on-azure-api-management</id><author><name>Jan Tourlamain</name></author><category term="azure" /><summary type="html">Azure API management automatically exposes openapi documentation through the developer portal. But what if your company doesn’t activate the portal? This article describes how you can make the openapi documentation available through your API.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2021/07/apim_openapi.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2021/07/apim_openapi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Use policy expressions with named values in Azure API management</title><link href="https://www.devprotocol.com/2020/01/28/use-policy-expressions-with-named-values-in-azure-api-management.html" rel="alternate" type="text/html" title="Use policy expressions with named values in Azure API management" /><published>2020-01-28T00:00:00-06:00</published><updated>2020-01-28T00:00:00-06:00</updated><id>https://www.devprotocol.com/2020/01/28/use-policy-expressions-with-named-values-in-azure-api-management</id><author><name>Jan Tourlamain</name></author><category term="azure" /><summary type="html">When deploying your Azure API management via ARM templates you want to avoid putting environment depending variables in your template files. But injecting all settings via a parameter file is sometimes easier said than done. In my case, I needed to set an API policy to verify a certificate thumbprint. And that simple thing took me a few hours.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2020/01/apim_policy_namedvalue.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2020/01/apim_policy_namedvalue.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Use your private linked ARM templates with ease</title><link href="https://www.devprotocol.com/2019/08/15/use-your-private-linked-arm-templates-with-ease.html" rel="alternate" type="text/html" title="Use your private linked ARM templates with ease" /><published>2019-08-15T00:00:00-05:00</published><updated>2019-08-15T00:00:00-05:00</updated><id>https://www.devprotocol.com/2019/08/15/use-your-private-linked-arm-templates-with-ease</id><author><name>Jan Tourlamain</name></author><category term="azure" /><category term="devops" /><category term="alm" /><summary type="html">Everyone that worked with ARM templates knows that they are error prone. More often than not it’s a struggle get them right. So, if you don’t want your team to wonder if that 6th floor window isn’t an easier way out, you provide them reusable templates. One problem with linked templates is that they must be publicly available. As not all companies want their resources be publicly exposed, you need to find another way.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2019/08/arm.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2019/08/arm.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Application Insights setup for dotnet core 2.1</title><link href="https://www.devprotocol.com/2019/08/12/application-insights-setup-for-dotnet-core-2-1.html" rel="alternate" type="text/html" title="Application Insights setup for dotnet core 2.1" /><published>2019-08-12T00:00:00-05:00</published><updated>2019-08-12T00:00:00-05:00</updated><id>https://www.devprotocol.com/2019/08/12/application-insights-setup-for-dotnet-core-2-1</id><author><name>Jan Tourlamain</name></author><category term="azure" /><category term="dotnet" /><summary type="html">Application Insights is often used for logging, but did you really read the name? The goal of Application Insights is getting a good insight view of how your application is working.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2019/08/appinsights_overview-1.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2019/08/appinsights_overview-1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ARM your dev pipe with CALM</title><link href="https://www.devprotocol.com/2019/05/10/arm-your-devpipe-with-calm.html" rel="alternate" type="text/html" title="ARM your dev pipe with CALM" /><published>2019-05-10T00:00:00-05:00</published><updated>2019-05-10T00:00:00-05:00</updated><id>https://www.devprotocol.com/2019/05/10/arm-your-devpipe-with-calm</id><author><name>Jan Tourlamain</name></author><category term="azure" /><category term="devops" /><category term="alm" /><summary type="html">Nowadays starting a new project demands a lot knowledge. Besides your programming skills, you also need to know source control, continuous integration and delivery techniques as well as taming cloud solutions. As the time to market decreases and agile working increases your releases, you better start thinking about automating your CI/CD pipeline.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2019/05/calm.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2019/05/calm.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Integrate Azure AD in your Giraffe web app</title><link href="https://www.devprotocol.com/2018/08/14/integrate-azure-ad-in-your-giraffe-web-app.html" rel="alternate" type="text/html" title="Integrate Azure AD in your Giraffe web app" /><published>2018-08-14T00:00:00-05:00</published><updated>2018-08-14T00:00:00-05:00</updated><id>https://www.devprotocol.com/2018/08/14/integrate-azure-ad-in-your-giraffe-web-app</id><author><name>Jan Tourlamain</name></author><category term="fsharp" /><category term="azure" /><category term="giraffe" /><summary type="html">Dotnet core, Azure AD, OAuth and openid connect are all exiting technologies. In this post I will combine them in a Giraffe web application.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2018/08/giraffeAndAzureAD.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2018/08/giraffeAndAzureAD.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Use appsettings in a Giraffe web app</title><link href="https://www.devprotocol.com/2018/04/19/use-appsettings-in-a-giraffe-web-app.html" rel="alternate" type="text/html" title="Use appsettings in a Giraffe web app" /><published>2018-04-19T00:00:00-05:00</published><updated>2018-04-19T00:00:00-05:00</updated><id>https://www.devprotocol.com/2018/04/19/use-appsettings-in-a-giraffe-web-app</id><author><name>Jan Tourlamain</name></author><category term="fsharp" /><category term="giraffe" /><summary type="html">During the learning of F# the inevitable question arises on how to use the language for your day to day tasks. You can create a web site using F# using the Giraffe framework. The framework can be found on github. The most amazing part that I found is their documentation. A lot can be found to get you started. A missing piece in tutorials is how to use an appsettings.json file with the Giraffe framework, and that’s what this post is about.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2018/04/Giraffe.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2018/04/Giraffe.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">This tutorial will get you started with Azure service bus, dotnet core and F#</title><link href="https://www.devprotocol.com/2017/11/12/tutorial-azure-service-bus-dotnet-core-and-fsharp.html" rel="alternate" type="text/html" title="This tutorial will get you started with Azure service bus, dotnet core and F#" /><published>2017-11-12T00:00:00-06:00</published><updated>2017-11-12T00:00:00-06:00</updated><id>https://www.devprotocol.com/2017/11/12/tutorial-azure-service-bus-dotnet-core-and-fsharp</id><author><name>Jan Tourlamain</name></author><category term="azure" /><category term="fsharp" /><summary type="html">With the release of the dotnet 2.0 framework things are really getting interesting. So I tried to combine dotnet core, F# and Azure service bus. Seems reasonable at first, but as F# is quite new to me I struggled to find any tutorial. Apparently everyone is assuming that when you work in F# you’ll be able to figure things out from the C# tutorials. With this tutorial that’s about to change.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2017/11/fsharpservicebus.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2017/11/fsharpservicebus.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Powershell and Azure on MacOS</title><link href="https://www.devprotocol.com/2017/08/01/powershell-and-azure-on-macos.html" rel="alternate" type="text/html" title="Powershell and Azure on MacOS" /><published>2017-08-01T00:00:00-05:00</published><updated>2017-08-01T00:00:00-05:00</updated><id>https://www.devprotocol.com/2017/08/01/powershell-and-azure-on-macos</id><author><name>Jan Tourlamain</name></author><category term="xamarin" /><category term="azure" /><category term="powershell" /><summary type="html">As a mobile developer 90% of the time I work on a mac. Visual Studio for Mac is an awesome tool to create Xamarin mobile apps. More than not mobile apps are using services. You can use .NET Core to create APIs but deploying them isn’t so easy on a mac. Sure you can use the Azure CLI, but if you are working with mixed teams Powershell seems to be king to deploy towards Azure.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2017/08/powerapple-1.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2017/08/powerapple-1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ReactiveUI Tutorial for Xamarin: The ViewModel</title><link href="https://www.devprotocol.com/2017/07/20/reactiveui-tutorial-for-xamarin-the-viewmodel.html" rel="alternate" type="text/html" title="ReactiveUI Tutorial for Xamarin: The ViewModel" /><published>2017-07-20T00:00:00-05:00</published><updated>2017-07-20T00:00:00-05:00</updated><id>https://www.devprotocol.com/2017/07/20/reactiveui-tutorial-for-xamarin-the-viewmodel</id><author><name>Jan Tourlamain</name></author><category term="xamarin" /><category term="mobile" /><category term="reactiveui" /><summary type="html">Introduction</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.devprotocol.com/assets/images/2017/07/marbles.png" /><media:content medium="image" url="https://www.devprotocol.com/assets/images/2017/07/marbles.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>